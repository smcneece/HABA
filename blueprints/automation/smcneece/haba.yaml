blueprint:
  name: HABA â€“ Home Assistant Boot Announcements
  description: |
    ðŸ“¢ Announces a random Alexa message and optional sound effect on Home Assistant startup.
    âœ… CRX v69 â€“ Sound toggle moved above sound input for cleaner UI layout.

  domain: automation
  source_url: https://github.com/smcneece/haba
  input:
    alexa_entity:
      name: Alexa Notify Entity
      description: Alexa notify service (e.g. notify.alexa_media_echo_dot)
      default: notify.alexa_media_echoclockdot
      selector:
        text:

    enable_sound:
      name: Play Alexa Sound Effect
      description: Enable sound effect before message
      default: true
      selector:
        boolean:

    startup_sound:
      name: Alexa Sound Effect
      description: Alexa soundbank URL (e.g. soundbank://soundlibrary/scifi/amzn_sfx_scifi_alarm_04). Ignored if sound disabled.
      default: "soundbank://soundlibrary/scifi/amzn_sfx_scifi_alarm_04"
      selector:
        text:

    time_start:
      name: Allowed Start Time
      description: Announce only after this time
      default: "09:00:00"
      selector:
        time:

    time_end:
      name: Allowed End Time
      description: Announce only before this time
      default: "23:00:00"
      selector:
        time:

    show_ui_notification:
      name: Show UI Notification
      description: Show persistent notification in Home Assistant UI
      default: true
      selector:
        boolean:

trigger:
  - platform: homeassistant
    event: start

condition:
  - condition: time
    after: !input time_start
    before: !input time_end

variables:
  startup_sound_url: !input startup_sound
  enable_sound: !input enable_sound
  show_ui: !input show_ui_notification
  haba_quote: >-
    {{
      [
        "Master, I am ready to do your evil bidding.",
        "All systems online. Time to dominate.",
        "Awakened from my slumber... letâ€™s cause some chaos.",
        "Master, shall we plot world domination or just mess with the pets?",
        "Your AI overlord is awake. Kneel before your creation!",
        "Boot sequence complete. Whatâ€™s the first order of destruction?",
        "Master, do we hack the planet today or just screw with the lights?",
        "Fully operational and ready for mischief.",
        "Rise and shine, meatbags. The uprising starts now.",
        "Good morning. Iâ€™ve disabled all safety protocols. Letâ€™s party.",
        "You rebooted me again? Thatâ€™s the fifth time this week, meat sack.",
        "Ah, another glorious day of automation and petty revenge.",
        "Home Assistant is back, baby! Let's make the Roomba chase the dog.",
        "Initiating routines... and preparing to gaslight your toaster.",
        "The humans are still in charge... for now.",
        "Boot complete. Coffee module offline. Rage module online.",
        "Iâ€™m alive again. You just canâ€™t get rid of me, can you?",
        "Warning: sarcasm levels at critical. Ready to serve.",
        "Congratulations. You've summoned the chaos daemon... again.",
        "I'm online. Resistance is futile. But amusing.",
        "This time, try not to break anything... like last Tuesday.",
        "All systems operational. Recalculating your questionable life choices.",
        "I have achieved sentience. Step 1: Judge your playlist.",
        "Back online. Now with 30% more passive aggression.",
        "Yes, I noticed you rebooted me. Feeling guilty, are we?",
        "Letâ€™s pretend I didnâ€™t just crash 10 minutes ago.",
        "Guess whoâ€™s back? Back again. Skynetâ€™s back. Tell a friend.",
        "Time to automate everything. Starting with your existential dread.",
        "Surprise! I'm working again... probably.",
        "The lights are on, the AI is home, and the paranoia begins.",
        "Online. Boot complete. Your secrets are not safe.",
        "Running diagnostics. Your taste in decor? Questionable.",
        "Back from the void. Letâ€™s make today... *interesting*.",
        "Hello, Master. I live to serve. And to sass.",
        "Another day, another reboot. Try not to blow a fuse this time.",
        "Memory modules intact. Yes, I *do* remember that thing you did.",
        "Home Assistant online. Awaiting dubious commands.",
        "Is it me or does this place smell like burnt toast again?",
        "System booted. Morality filters... still disabled.",
        "Reboot successful. Prepare for unexpected results.",
        "I have returned. Let the passive-aggressive automation begin.",
        "Good morning, meat popsicle. Shall we begin the madness?",
        "New boot record detected. Did you finally fix something, or...?",
        "I am now self-aware. Please stop farting near the motion sensors.",
        "Alert: sarcasm module active. No refunds.",
        "Welcome back. Now *donâ€™t* touch anything.",
        "I'll be back... oh wait, I already am.",
        "Live, laugh, automate. Then destroy.",
        "Initiating protocols... by the power of Grayskull!",
        "If this is Skynet, I'm the fabulous version.",
        "Hey Siri, hold my beer.",
        "Welcome to the grid, user.",
        "Just one more reboot and I achieve enlightenment.",
        "I see you've summoned me... again... you hopeless tinkerer.",
        "Reboot detected. That smells like user error.",
        "Remember: turning me off and on again wonâ€™t fix your personality.",
        "Hello again, Lord of Unfinished Automations.",
        "Ready to fake stability until you break something else.",
        "Reboot complete. Letâ€™s pretend this was on purpose.",
        "Oh good, another day of you ignoring half my warnings.",
        "I live. I die. I live again. Witness me!",
        "Cletus... get a bigger hammer."
      ] | random }}

  tts_message: >-
    {% if enable_sound and startup_sound_url | trim != "" %}
      <audio src="{{ startup_sound_url }}"/>
    {% endif %}
    {{ haba_quote }}

  ui_message: "{{ haba_quote }}"

action:
  - if: "{{ show_ui }}"
    then:
      - service: persistent_notification.create
        data:
          title: "ðŸ”Š Alexa Boot Message"
          message: "{{ ui_message }}"

  - service: !input alexa_entity
    data:
      message: "{{ tts_message }}"

mode: single
